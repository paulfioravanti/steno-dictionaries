{
  "KAEUZ": "{:CMT:change CASE}{:KEY_COMBO:SHIFT_L(GRAVE)}",
  "KHR-FD": "{:CMT:CLear FinD matches}{:KEY_COMBO:ESCAPE SHIFT_L(COLON)}{:ATTACH:nohlsearch}{:KEY_COMBO:RETURN SHIFT_L(COLON)}{:ATTACH:call clearmatches()}{:KEY_COMBO:RETURN}",
  "KHR-FP": "{:CMT:CLear searCH matches}{:KEY_COMBO:ESCAPE SHIFT_L(COLON)}{:ATTACH:nohlsearch}{:KEY_COMBO:RETURN SHIFT_L(COLON)}{:ATTACH:call clearmatches()}{:KEY_COMBO:RETURN}",
  "KHR-BZ": "{:CMT:vim move window to very top (⌃W ⇧↑)}{:KEY_COMBO:CONTROL_L(W) SHIFT_L(K)}",
  "KHR-RZ": "{:CMT:vim move window to very bottom (^W ⇧↓)}{:KEY_COMBO:CONTROL_L(W) SHIFT_L(J)}",
  "KHR-SZ": "{:CMT:CLear sPaceS (vim)}{:KEY_COMBO:ESCAPE M Z SHIFT_L(COLON)}{:ATTACH:%s/\\s\\+$//}{:KEY_COMBO:RETURN SHIFT_L(COLON)}{:ATTACH:let @/=''}{:KEY_COMBO:RETURN GRAVE Z}",
  "KHR-GZ": "{:CMT:vim move window to far right (⌃W ⇧→)}{:KEY_COMBO:CONTROL_L(W) SHIFT_L(L)}",
  "KHR*Z": "{:CMT:vim move window to far left (⌃W ⇧←)}{:KEY_COMBO:CONTROL_L(W) SHIFT_L(H)}",
  "KHRAOERP": "{:CMT:CLEAR sPaces (vim)}{:KEY_COMBO:ESCAPE M Z SHIFT_L(COLON)}{:ATTACH:%s/\\s\\+$//}{:KEY_COMBO:RETURN SHIFT_L(COLON)}{:ATTACH:let @/=''}{:KEY_COMBO:RETURN GRAVE Z}",
  "KP*EUP": "{:CMT:COPY into Plus buffer; handy for visual mode}{:KEY_COMBO:SHIFT_L(QUOTEDBL PLUS) Y}",
  "KPH-PBT": "{:CMT:toggle CoMMeNT lines using vim-commentary}{:KEY_COMBO:G C C}",
  "KPH*PBT": "{:CMT:toggle CoMMeNT range using vim-commentary}{:KEY_COMBO:G C}",
  "KPHO*ED": "{:CMT:enter tmux Copy MODE (see tmux.conf in my dotfiles)}{:KEY_COMBO:CONTROL_L(A) ESCAPE}",
  "KWA*UL": "{:CMT:QUit ALL}{:KEY_COMBO:SHIFT_L(COLON)}{:ATTACH:quitall}{:KEY_COMBO:RETURN}",
  "PHRUFR": "{:CMT:PLUs (+) bUFFeR}{:KEY_COMBO:SHIFT_L(QUOTEDBL PLUS)}",
  "SK-L": "{:CMT:escape to ConSoLe (from Vim)}{:KEY_COMBO:CONTROL_L(Z)}",
  "SKW*EU": "{:CMT:Save and QUIt}{:KEY_COMBO:SHIFT_L(COLON)}{:ATTACH:wq}{:KEY_COMBO:RETURN}",
  "SKW*EUZ": "{:CMT:force Save and QUIt}{:KEY_COMBO:SHIFT_L(COLON)}{:ATTACH:wq!}{:KEY_COMBO:RETURN}",
  "SKWR*EUP": "{:CMT:I with suppressed space (mirrors SKWR*EU)}{:KEY_COMBO:SHIFT_L(I)}{:ATTACH}",
  "SKWRA*P": "{:CMT:A with suppressed space (mirrors SKWRA*)}{:KEY_COMBO:SHIFT_L(A)}{:ATTACH}",
  "SKWRO*P": "{:CMT:O with suppressed space (mirrors SKWRO*)}{:KEY_COMBO:SHIFT_L(O)}{:ATTACH}",
  "S*UB": "{:CMT:vim SUBstitute [override]}{:KEY_COMBO:ESCAPE SHIFT_L(COLON)}{:ATTACH:%s/}",
  "SW*": "{:CMT:vim Substitute With}{:ATTACH:\/\/g}{:KEY_COMBO:LEFT LEFT}",
  "T-TS": "{:CMT:move to next snippet TabStop [override]}{:KEY_COMBO:CONTROL_L(J)}{:ATTACH}",
  "T*TS": "{:CMT:move to previous snippet TabStop}{:KEY_COMBO:CONTROL_L(K)}{:ATTACH}",
  "TP*G": "{:CMT:ForeGround process}{:ATTACH:fg}{:KEY_COMBO:RETURN}",
  "TPH-RD": "{:CMT:toggle NeRDtree (vim)}{:KEY_COMBO:SHIFT_L(COLON)}{:ATTACH:NERDTreeToggle}{:KEY_COMBO:RETURN}",
  "TPH*RD": "{:CMT:find in NeRDtree (vim)}{:KEY_COMBO:SHIFT_L(COLON)}{:ATTACH:NERDTreeFind}{:KEY_COMBO:RETURN}",
  "TPR-PLT": "{:CMT:FoRMaT file and return to last jump}{:KEY_COMBO:ESCAPE G G EQUAL SHIFT_L(G) CONTROL_L(O O)}"
}
